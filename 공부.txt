대문자로 시작해야된다. (

주로 컴포넌트를 만드는 곳은 src에서 만들고

데이터 관리 

props 프로퍼티 : 
상위 컴포넌트에서 하위 컴포넌트로 데이터를 전달되는 읽기 전용 데이터 (단방향 한쪽 방향으로 전달된다. 자식에서 부모로 전달 불가)

props 이름은 내가 임의로 만든다.

데이터 형태는 json파일로 되어있다. 원래는 서버에 저장되어 있고, 데이터를 가져올때는 다른 라이브러리가 필요한다.

8/2
생성주기 함수(클래스형 컴포넌트에서 사용하는 함수)
컴포넌트가 생성 될때
constructor 이 함수가 제일 처음 실행되는 함수(생성이 됬을떄 특정한 작업을 하고 싶다.
render로 화면이 그려지고
componentDidMount(화면에 잘 부착했다.)->주로 데이터를 불러온다.

데이터가 업데이트되면
componentDidUpdate(데이터가 바뀐 뒤에 실행)

데이터가 제거될때
componentWillUnmount(컴포넌트가 작동하지 않을때)


데이터관리2
state:
컴포넌트의 상태state를 저장하고 변경할 수 있는 데이터, 클래스형 컴포넌트에서 사용
(함수형 컴포넌트에서 사용하려면 다른 형태로 사용하고, state와 생성주기 함수는 클래스형 컴포넌트에서만 사용한다.)

state함수 값을 바꿀때 setState()메소드를 실행해야 된다.

setState로 값이 업데이트되면 바로 render로 화면에 출력이 된다.

8/3
영화 데이터를 가져올려면 axios 사용
npm install axios(npm에서 axios라이브러리를 설치한다.)

axios를 사용해서 영화 API를 호출한다.(API는 영화 데이터이다.)

package.json은 이미 설치한 라이브러리를 알 수 잇다.

get 방식 => 주소창에 주소가 다 보이는것 (주소창을 통해서 데이터가 온다.)


react에서는 css를 css전처리기를 사용한다.

8/4
routes 폴더를 만들어서 About과 Home컴포넌트를 집어넣는다.
About은 함수형 컴포넌트, Home은 클래스형 컴포넌트로 만든다.

components 폴더를 만들어 Movie.js를 넣는다.

SPA(single page application)를 구현하려면 라우터를 구현할 줄 알아야 된다.

npm install react-router-dom (react-router-dom을 설치 : 설치하는 이유는 

router라우터를 사용자가 입력한 URL을 통해 특정 컴포넌트를 불러오는 것.

어떤버전을 쓰는지 잘 알고 작성해야된다.

routes와 route는 리액트 라우트 돔에서 불로오는 것이다.
routes는 route를 묶어주는 역할/route는 바뀌는 컴포넌트를 나타낸다.

<Route path='/' element={<Home/>}/> 주소창에 path안에 있는 것으로 바뀌면 해당 컴포넌트를 열어라

Link to는 a href와 같다.

react에서는 기존의 css와 다르게 css전처리기(Sass)를 사용한다.

Sass는 기존의 css와 다르게 가로로 작성하지 않고, 아래로 나열해서 작성한다.

8/7
npm install gh-pages => 깃허브 페이지를 설치한다.

npm run build =>빌드를 실행 시키겠다. (이때 빌드는 react-scripts build이다. 리엑스 스크립트 빌드를 실행한다.) 
"deploy":"gh-pages -d build" => 깃허브 페이지에 빌드를 실행(깃허브 페이지에 배포한다.)

"homepage": "https://GaYeon-Go(내 사이트 주소).github.io/hokkfox(레파토리)"

BrowserRouter에 basename={process.env.PUBLIC_URL} 이것을 추가! 추가한 이유는 깃허브에서 라우터를 지원하지 않기 때문에 사용한다?

git add README.md 마크다운 파일을 추가할 때 사용! 하지만 우리는 모든 파일을 지칭(추가한다)해야 하기 때문에 git add .이렇게 작성한다.

git config --list => 
git config --global user.name "GaYeon-Go" (깃허브 계정)
git config --global user.email hokkfox919@gmail.com (깃허브 가입할 때 사용한 메일계정)